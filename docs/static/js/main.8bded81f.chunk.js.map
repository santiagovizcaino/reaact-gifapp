{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","valorEntrada","setValorEntrada","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifts","imagenes","key","GiftExpertApp","categoria","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAAiB,EACFC,mBAAS,IADP,mBACnCC,EADmC,KACrBC,EADqB,KAkB1C,OAEI,0BAAMC,SAdS,SAACC,GAChBA,EAAEC,iBACCJ,EAAaK,OAAOC,OAAO,IAC1BR,GAAa,SAAAS,GAAQ,OAAGP,GAAH,mBAAmBO,OACxCN,EAAgB,OAWhB,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAtBY,SAACP,GACrBF,EAAgBE,EAAEQ,OAAOF,Y,uBCNnBG,EAAO,uCAAC,WAAML,GAAN,uBAAAM,EAAA,6DAGRC,EAHQ,iDAGsCC,UAAUR,GAHhD,+DAIGS,MAAMF,GAJT,cAIRG,EAJQ,gBAKOA,EAAKC,OALZ,uBAKPC,EALO,EAKPA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAV3B,kBAePM,GAfO,4CAAD,sDCERO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OACI,yBAAKc,UAAU,2CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECHZ,SAACA,GAAY,IAAD,EACTR,mBAAS,CAC/BoB,KAAK,GACLa,SAAQ,IAHuB,mBAC5BC,EAD4B,KACrBC,EADqB,KA6BnC,OAtBAC,qBAAU,WACNvB,EAAQL,GACP6B,MAAK,SAAAd,GACFe,YAAW,WACPH,EAAS,CACLf,KAAKG,EACLU,SAAQ,MAEb,UAQT,CAACzB,IAMI0B,EDhBuBK,CAAc/B,GAAhCgC,EAVuB,EAU5BpB,KAAca,EAVc,EAUdA,QAMrB,OACI,oCACI,wBAAIJ,UAAU,sCAAsCrB,GACnDyB,GAAS,uBAAGJ,UAAU,qCAAb,cACV,yBAAKA,UAAU,aAEHW,EAASlB,KAAI,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACAkB,IAAKlB,EAAIC,IACLD,UE3BnBmB,EAAc,WAAI,MAEO1C,mBAAS,CAAC,gBAFjB,mBAEpB2C,EAFoB,KAET5C,EAFS,KAa3B,OACA,oCACI,6CACA,kBAAC,EAAD,CAAaA,aAAcA,IAC3B,6BAKA,4BAEQ4C,EAAUrB,KAAI,SAACd,GAAD,OACV,kBAAC,EAAD,CAASiC,IAAKjC,EAAUA,SAAUA,U,MCxBtDoC,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8bded81f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types' ;\r\n\r\nexport const AddCategory = ({setCategoria})=> {\r\n    const [valorEntrada, setValorEntrada] = useState('')\r\n    const handleInputChange=(e)=>{\r\n        setValorEntrada(e.target.value)\r\n    }\r\n\r\n    const handleSubmit=(e) =>{\r\n        e.preventDefault()\r\n        if(valorEntrada.trim().length>2){\r\n            setCategoria(category=>[valorEntrada,...category])\r\n            setValorEntrada('')\r\n\r\n        }\r\n        // console.log('hecho el submit');\r\n       \r\n\r\n    }   \r\n    \r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={valorEntrada}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategoria: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\n// AddCategory.defaultProps={\r\n//     setCategoria:'ingrese algo',\r\n// }","export const  getGifs=async(category)=>{\r\n       \r\n\r\n        const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=gcJtG0NAw46EV25sbJL9pj2U4PtQ0yHe`;\r\n        const resp=await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img=>{\r\n            return{\r\n                id:img.id,\r\n                title: img.title,\r\n                url:img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        // console.log(gifs);\r\n        return gifs;        \r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    // console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState,useEffect } from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => { \r\n    // const [images, setImages] = useState([]);\r\n\r\n\r\n\r\n    // useEffect(()=>{\r\n    //         getGifs(category)\r\n    //         .then(setImages);\r\n    // },[category])\r\n\r\n    const {data:imagenes,loading}=useFetchGifts(category);\r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn \">{category}</h3>\r\n            {loading&&<p className=\"animate__animated animate__flash \">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        imagenes.map(img=>(\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                            \r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifts=(category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(img=>{\r\n            setTimeout(() => {\r\n                setState({\r\n                    data:img,\r\n                    loading:false,\r\n                });\r\n            }, 100);\r\n\r\n\r\n            \r\n\r\n\r\n        })\r\n\r\n    },[category])\r\n\r\n  \r\n\r\n\r\n\r\n    return state\r\n\r\n\r\n\r\n\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GiftExpertApp=()=>{\r\n    // const categorias=['Bob Esponja','Jhony Bravo','Dexter']\r\n    const [categoria, setCategoria] = useState(['Bob Esponja'])\r\n    \r\n    // const anadirCategoria=()=>{\r\n    //     // setCategoria([...categoria,'Garfield']);\r\n    //     setCategoria(category=>[...category,'Garfield'])\r\n\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategoria={setCategoria}/>\r\n        <hr/>\r\n\r\n        \r\n\r\n\r\n        <ol>\r\n            {\r\n                categoria.map((category)=>(\r\n                    <GifGrid key={category} category={category} />\r\n                \r\n                ))\r\n            }\r\n\r\n        </ol>\r\n    </>\r\n    )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GiftExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  \n  <GiftExpertApp />,\n  document.getElementById('root')\n\n);\n\n\n\n\n"],"sourceRoot":""}